{"ast":null,"code":"var _jsxFileName = \"/home/linux-1/projects/web-server-app/imx8mp-web-client/src/components/SensorsTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorsTab = ({\n  config,\n  onWsStatusChange\n}) => {\n  _s();\n  const [sensorData, setSensorData] = useState({});\n  const [sensorHistory, setSensorHistory] = useState([]);\n  const [wsConnected, setWsConnected] = useState(false);\n  useEffect(() => {\n    console.log('SensorsTab: Creating WebSocket connection to ws://localhost:8000');\n    const ws = new WebSocket('ws://localhost:8000');\n    ws.onopen = () => {\n      console.log('SensorsTab: WebSocket connected');\n      setWsConnected(true);\n      if (onWsStatusChange) onWsStatusChange(true);\n    };\n    ws.onclose = () => {\n      console.log('SensorsTab: WebSocket disconnected');\n      setWsConnected(false);\n      if (onWsStatusChange) onWsStatusChange(false);\n    };\n    ws.onerror = e => {\n      console.log('SensorsTab: WebSocket error', e);\n      setWsConnected(false);\n      if (onWsStatusChange) onWsStatusChange(false);\n    };\n    ws.onmessage = event => {\n      const msg = JSON.parse(event.data);\n      if (msg.type === 'sensor_update') {\n        setSensorData(prev => {\n          // Use both topic and key for mapping\n          const topic = msg.topic;\n          const key = topic.split('/')[1];\n          const newData = {\n            ...prev,\n            [key]: msg.data,\n            [topic]: msg.data\n          };\n          const historyEntry = {\n            sensor: key,\n            value: msg.data.value || msg.data.raw || '',\n            unit: msg.data.unit || '',\n            timestamp: msg.data.timestamp || new Date().toISOString()\n          };\n          setSensorHistory(prevHist => [historyEntry, ...prevHist.slice(0, 49)]);\n          return newData;\n        });\n      }\n      if (msg.type === 'init') {\n        const mapped = {};\n        Object.entries(msg.sensors).forEach(([topic, data]) => {\n          const key = topic.split('/')[1];\n          mapped[key] = data;\n          mapped[topic] = data;\n        });\n        setSensorData(mapped);\n      }\n    };\n    return () => ws.close();\n  }, [onWsStatusChange]);\n  const refreshSensors = () => {\n    // Optionally, trigger a backend refresh if needed\n    console.log('Manual sensor refresh requested');\n  };\n  const clearSensorLog = () => {\n    setSensorHistory([]);\n  };\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  // Add debug log\n  console.log('sensorData:', sensorData);\n  console.log('SensorsTab: Rendered');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thermometer-half me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), \"Sensor Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            size: \"sm\",\n            onClick: refreshSensors,\n            className: \"me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-sync-alt me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), \"Refresh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            size: \"sm\",\n            onClick: clearSensorLog,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), \"Clear Log\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: config.broker_config && Object.entries(config.broker_config.topics).map(([sensorKey, topicConfig]) => {\n            const currentData = sensorData[sensorKey] || sensorData[topicConfig.topic];\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 4,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sensor-card p-3 border rounded ${sensorKey}`,\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"text-muted mb-2\",\n                  children: topicConfig.description || sensorKey\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"value h5 mb-2\",\n                  children: currentData ? `${currentData.value || currentData.raw || ''} ${currentData.unit || ''}` : `-- ${topicConfig.unit}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timestamp small text-muted\",\n                  children: currentData ? currentData.timestamp ? new Date(currentData.timestamp).toLocaleString() : 'N/A' : 'Waiting for data...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, sensorKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Sensor History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sensor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Timestamp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: sensorHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.sensor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.unit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatTimestamp(entry.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorsTab, \"OaJYa2TvklgPCSGCmGZTRAAswWM=\");\n_c = SensorsTab;\nexport default SensorsTab;\nvar _c;\n$RefreshReg$(_c, \"SensorsTab\");","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Button","Table","jsxDEV","_jsxDEV","SensorsTab","config","onWsStatusChange","_s","sensorData","setSensorData","sensorHistory","setSensorHistory","wsConnected","setWsConnected","console","log","ws","WebSocket","onopen","onclose","onerror","e","onmessage","event","msg","JSON","parse","data","type","prev","topic","key","split","newData","historyEntry","sensor","value","raw","unit","timestamp","Date","toISOString","prevHist","slice","mapped","Object","entries","sensors","forEach","close","refreshSensors","clearSensorLog","formatTimestamp","toLocaleString","children","Header","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","Body","broker_config","topics","map","sensorKey","topicConfig","currentData","md","lg","description","responsive","entry","index","_c","$RefreshReg$"],"sources":["/home/linux-1/projects/web-server-app/imx8mp-web-client/src/components/SensorsTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Table } from 'react-bootstrap';\nimport { TabConfig, SensorData, SensorHistoryEntry } from '../types';\n\ninterface SensorsTabProps {\n  config: TabConfig;\n  onWsStatusChange?: (connected: boolean) => void;\n}\n\nconst SensorsTab: React.FC<SensorsTabProps> = ({ config, onWsStatusChange }) => {\n  const [sensorData, setSensorData] = useState<{ [key: string]: SensorData | { raw?: string; [key: string]: any } }>({});\n  const [sensorHistory, setSensorHistory] = useState<SensorHistoryEntry[]>([]);\n  const [wsConnected, setWsConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('SensorsTab: Creating WebSocket connection to ws://localhost:8000');\n    const ws = new WebSocket('ws://localhost:8000');\n    ws.onopen = () => {\n      console.log('SensorsTab: WebSocket connected');\n      setWsConnected(true);\n      if (onWsStatusChange) onWsStatusChange(true);\n    };\n    ws.onclose = () => {\n      console.log('SensorsTab: WebSocket disconnected');\n      setWsConnected(false);\n      if (onWsStatusChange) onWsStatusChange(false);\n    };\n    ws.onerror = (e) => {\n      console.log('SensorsTab: WebSocket error', e);\n      setWsConnected(false);\n      if (onWsStatusChange) onWsStatusChange(false);\n    };\n    ws.onmessage = (event) => {\n      const msg = JSON.parse(event.data);\n      if (msg.type === 'sensor_update') {\n        setSensorData(prev => {\n          // Use both topic and key for mapping\n          const topic = msg.topic;\n          const key = topic.split('/')[1];\n          const newData = { ...prev, [key]: msg.data, [topic]: msg.data };\n          const historyEntry: SensorHistoryEntry = {\n            sensor: key,\n            value: msg.data.value || (msg.data as any).raw || '',\n            unit: msg.data.unit || '',\n            timestamp: msg.data.timestamp || new Date().toISOString(),\n          };\n          setSensorHistory(prevHist => [historyEntry, ...prevHist.slice(0, 49)]);\n          return newData;\n        });\n      }\n      if (msg.type === 'init') {\n        const mapped: { [key: string]: any } = {};\n        Object.entries(msg.sensors).forEach(([topic, data]) => {\n          const key = topic.split('/')[1];\n          mapped[key] = data;\n          mapped[topic] = data;\n        });\n        setSensorData(mapped);\n      }\n    };\n    return () => ws.close();\n  }, [onWsStatusChange]);\n\n  const refreshSensors = () => {\n    // Optionally, trigger a backend refresh if needed\n    console.log('Manual sensor refresh requested');\n  };\n\n  const clearSensorLog = () => {\n    setSensorHistory([]);\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  // Add debug log\n  console.log('sensorData:', sensorData);\n  console.log('SensorsTab: Rendered');\n\n  return (\n    <div>\n      <Card>\n        <Card.Header className=\"d-flex justify-content-between align-items-center\">\n          <h5>\n            <i className=\"fas fa-thermometer-half me-2\"></i>\n            Sensor Data\n          </h5>\n          <div>\n            <Button variant=\"primary\" size=\"sm\" onClick={refreshSensors} className=\"me-2\">\n              <i className=\"fas fa-sync-alt me-1\"></i>\n              Refresh\n            </Button>\n            <Button variant=\"warning\" size=\"sm\" onClick={clearSensorLog}>\n              <i className=\"fas fa-trash me-1\"></i>\n              Clear Log\n            </Button>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Row className=\"mb-4\">\n            {config.broker_config && Object.entries(config.broker_config.topics).map(([sensorKey, topicConfig]) => {\n              const currentData = sensorData[sensorKey] || sensorData[topicConfig.topic];\n              return (\n                <Col key={sensorKey} md={6} lg={4} className=\"mb-3\">\n                  <div className={`sensor-card p-3 border rounded ${sensorKey}`}>\n                    <h6 className=\"text-muted mb-2\">{topicConfig.description || sensorKey}</h6>\n                    <div className=\"value h5 mb-2\">\n                      {currentData ? `${currentData.value || (currentData as any).raw || ''} ${currentData.unit || ''}` : `-- ${topicConfig.unit}`}\n                    </div>\n                    <div className=\"timestamp small text-muted\">\n                      {currentData ? (currentData.timestamp ? new Date(currentData.timestamp).toLocaleString() : 'N/A') : 'Waiting for data...'}\n                    </div>\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n\n          <div className=\"mt-4\">\n            <h6>Sensor History</h6>\n            <Table responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Sensor</th>\n                  <th>Value</th>\n                  <th>Unit</th>\n                  <th>Timestamp</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sensorHistory.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{entry.sensor}</td>\n                    <td>{entry.value}</td>\n                    <td>{entry.unit}</td>\n                    <td>{formatTimestamp(entry.timestamp)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default SensorsTab; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhE,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAuE,CAAC,CAAC,CAAC;EACtH,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAuB,EAAE,CAAC;EAC5E,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;IAC/E,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAC/CD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CF,cAAc,CAAC,IAAI,CAAC;MACpB,IAAIP,gBAAgB,EAAEA,gBAAgB,CAAC,IAAI,CAAC;IAC9C,CAAC;IACDU,EAAE,CAACG,OAAO,GAAG,MAAM;MACjBL,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDF,cAAc,CAAC,KAAK,CAAC;MACrB,IAAIP,gBAAgB,EAAEA,gBAAgB,CAAC,KAAK,CAAC;IAC/C,CAAC;IACDU,EAAE,CAACI,OAAO,GAAIC,CAAC,IAAK;MAClBP,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEM,CAAC,CAAC;MAC7CR,cAAc,CAAC,KAAK,CAAC;MACrB,IAAIP,gBAAgB,EAAEA,gBAAgB,CAAC,KAAK,CAAC;IAC/C,CAAC;IACDU,EAAE,CAACM,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAClC,IAAIH,GAAG,CAACI,IAAI,KAAK,eAAe,EAAE;QAChCnB,aAAa,CAACoB,IAAI,IAAI;UACpB;UACA,MAAMC,KAAK,GAAGN,GAAG,CAACM,KAAK;UACvB,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC/B,MAAMC,OAAO,GAAG;YAAE,GAAGJ,IAAI;YAAE,CAACE,GAAG,GAAGP,GAAG,CAACG,IAAI;YAAE,CAACG,KAAK,GAAGN,GAAG,CAACG;UAAK,CAAC;UAC/D,MAAMO,YAAgC,GAAG;YACvCC,MAAM,EAAEJ,GAAG;YACXK,KAAK,EAAEZ,GAAG,CAACG,IAAI,CAACS,KAAK,IAAKZ,GAAG,CAACG,IAAI,CAASU,GAAG,IAAI,EAAE;YACpDC,IAAI,EAAEd,GAAG,CAACG,IAAI,CAACW,IAAI,IAAI,EAAE;YACzBC,SAAS,EAAEf,GAAG,CAACG,IAAI,CAACY,SAAS,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UAC1D,CAAC;UACD9B,gBAAgB,CAAC+B,QAAQ,IAAI,CAACR,YAAY,EAAE,GAAGQ,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACtE,OAAOV,OAAO;QAChB,CAAC,CAAC;MACJ;MACA,IAAIT,GAAG,CAACI,IAAI,KAAK,MAAM,EAAE;QACvB,MAAMgB,MAA8B,GAAG,CAAC,CAAC;QACzCC,MAAM,CAACC,OAAO,CAACtB,GAAG,CAACuB,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,CAAClB,KAAK,EAAEH,IAAI,CAAC,KAAK;UACrD,MAAMI,GAAG,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC/BY,MAAM,CAACb,GAAG,CAAC,GAAGJ,IAAI;UAClBiB,MAAM,CAACd,KAAK,CAAC,GAAGH,IAAI;QACtB,CAAC,CAAC;QACFlB,aAAa,CAACmC,MAAM,CAAC;MACvB;IACF,CAAC;IACD,OAAO,MAAM5B,EAAE,CAACiC,KAAK,CAAC,CAAC;EACzB,CAAC,EAAE,CAAC3C,gBAAgB,CAAC,CAAC;EAEtB,MAAM4C,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACApC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC;EAED,MAAMoC,cAAc,GAAGA,CAAA,KAAM;IAC3BxC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMyC,eAAe,GAAIb,SAAiB,IAAK;IAC7C,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACc,cAAc,CAAC,CAAC;EAC7C,CAAC;;EAED;EACAvC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,UAAU,CAAC;EACtCM,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAEnC,oBACEZ,OAAA;IAAAmD,QAAA,eACEnD,OAAA,CAACN,IAAI;MAAAyD,QAAA,gBACHnD,OAAA,CAACN,IAAI,CAAC0D,MAAM;QAACC,SAAS,EAAC,mDAAmD;QAAAF,QAAA,gBACxEnD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAGqD,SAAS,EAAC;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAElD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLzD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA,CAACH,MAAM;YAAC6D,OAAO,EAAC,SAAS;YAACC,IAAI,EAAC,IAAI;YAACC,OAAO,EAAEb,cAAe;YAACM,SAAS,EAAC,MAAM;YAAAF,QAAA,gBAC3EnD,OAAA;cAAGqD,SAAS,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,WAE1C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTzD,OAAA,CAACH,MAAM;YAAC6D,OAAO,EAAC,SAAS;YAACC,IAAI,EAAC,IAAI;YAACC,OAAO,EAAEZ,cAAe;YAAAG,QAAA,gBAC1DnD,OAAA;cAAGqD,SAAS,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,aAEvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACdzD,OAAA,CAACN,IAAI,CAACmE,IAAI;QAAAV,QAAA,gBACRnD,OAAA,CAACL,GAAG;UAAC0D,SAAS,EAAC,MAAM;UAAAF,QAAA,EAClBjD,MAAM,CAAC4D,aAAa,IAAIpB,MAAM,CAACC,OAAO,CAACzC,MAAM,CAAC4D,aAAa,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,WAAW,CAAC,KAAK;YACrG,MAAMC,WAAW,GAAG9D,UAAU,CAAC4D,SAAS,CAAC,IAAI5D,UAAU,CAAC6D,WAAW,CAACvC,KAAK,CAAC;YAC1E,oBACE3B,OAAA,CAACJ,GAAG;cAAiBwE,EAAE,EAAE,CAAE;cAACC,EAAE,EAAE,CAAE;cAAChB,SAAS,EAAC,MAAM;cAAAF,QAAA,eACjDnD,OAAA;gBAAKqD,SAAS,EAAE,kCAAkCY,SAAS,EAAG;gBAAAd,QAAA,gBAC5DnD,OAAA;kBAAIqD,SAAS,EAAC,iBAAiB;kBAAAF,QAAA,EAAEe,WAAW,CAACI,WAAW,IAAIL;gBAAS;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3EzD,OAAA;kBAAKqD,SAAS,EAAC,eAAe;kBAAAF,QAAA,EAC3BgB,WAAW,GAAG,GAAGA,WAAW,CAAClC,KAAK,IAAKkC,WAAW,CAASjC,GAAG,IAAI,EAAE,IAAIiC,WAAW,CAAChC,IAAI,IAAI,EAAE,EAAE,GAAG,MAAM+B,WAAW,CAAC/B,IAAI;gBAAE;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzH,CAAC,eACNzD,OAAA;kBAAKqD,SAAS,EAAC,4BAA4B;kBAAAF,QAAA,EACxCgB,WAAW,GAAIA,WAAW,CAAC/B,SAAS,GAAG,IAAIC,IAAI,CAAC8B,WAAW,CAAC/B,SAAS,CAAC,CAACc,cAAc,CAAC,CAAC,GAAG,KAAK,GAAI;gBAAqB;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtH,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GATEQ,SAAS;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUd,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENzD,OAAA;UAAKqD,SAAS,EAAC,MAAM;UAAAF,QAAA,gBACnBnD,OAAA;YAAAmD,QAAA,EAAI;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBzD,OAAA,CAACF,KAAK;YAACyE,UAAU;YAACZ,IAAI,EAAC,IAAI;YAAAR,QAAA,gBACzBnD,OAAA;cAAAmD,QAAA,eACEnD,OAAA;gBAAAmD,QAAA,gBACEnD,OAAA;kBAAAmD,QAAA,EAAI;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfzD,OAAA;kBAAAmD,QAAA,EAAI;gBAAK;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdzD,OAAA;kBAAAmD,QAAA,EAAI;gBAAI;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACbzD,OAAA;kBAAAmD,QAAA,EAAI;gBAAS;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRzD,OAAA;cAAAmD,QAAA,EACG5C,aAAa,CAACyD,GAAG,CAAC,CAACQ,KAAK,EAAEC,KAAK,kBAC9BzE,OAAA;gBAAAmD,QAAA,gBACEnD,OAAA;kBAAAmD,QAAA,EAAKqB,KAAK,CAACxC;gBAAM;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvBzD,OAAA;kBAAAmD,QAAA,EAAKqB,KAAK,CAACvC;gBAAK;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtBzD,OAAA;kBAAAmD,QAAA,EAAKqB,KAAK,CAACrC;gBAAI;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrBzD,OAAA;kBAAAmD,QAAA,EAAKF,eAAe,CAACuB,KAAK,CAACpC,SAAS;gBAAC;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAJpCgB,KAAK;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrD,EAAA,CAzIIH,UAAqC;AAAAyE,EAAA,GAArCzE,UAAqC;AA2I3C,eAAeA,UAAU;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}