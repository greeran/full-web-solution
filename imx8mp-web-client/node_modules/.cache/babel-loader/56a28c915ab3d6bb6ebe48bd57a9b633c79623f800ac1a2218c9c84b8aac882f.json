{"ast":null,"code":"var _jsxFileName = \"/home/linux-1/projects/web-server-app/imx8mp-web-client/src/components/SensorsTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorsTab = ({\n  config,\n  sensorData,\n  backendConnected\n}) => {\n  _s();\n  var _config$sensors;\n  const [sensorHistory, setSensorHistory] = useState([]);\n  useEffect(() => {\n    // Update history when sensorData changes\n    Object.entries(sensorData).forEach(([key, data]) => {\n      if (data && data.timestamp) {\n        setSensorHistory(prevHist => {\n          // Avoid duplicate entries for the same timestamp/key\n          if (prevHist.length > 0 && prevHist[0].sensor === key && prevHist[0].timestamp === data.timestamp) return prevHist;\n          const historyEntry = {\n            sensor: key,\n            value: data.value || data.raw || '',\n            unit: data.unit || '',\n            timestamp: data.timestamp || new Date().toISOString()\n          };\n          return [historyEntry, ...prevHist.slice(0, 49)];\n        });\n      }\n    });\n  }, [sensorData]);\n  const refreshSensors = () => {\n    // Optionally, trigger a backend refresh if needed\n    console.log('Manual sensor refresh requested');\n  };\n  const clearSensorLog = () => {\n    setSensorHistory([]);\n  };\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thermometer-half me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \"Sensor Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            size: \"sm\",\n            onClick: refreshSensors,\n            className: \"me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-sync-alt me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), \"Refresh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            size: \"sm\",\n            onClick: clearSensorLog,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), \"Clear Log\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: ((_config$sensors = config.sensors) !== null && _config$sensors !== void 0 ? _config$sensors : []).map(sensor => {\n            const key = sensor.topic.split('/')[1];\n            const currentData = sensorData[key];\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 4,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sensor-card p-3 border rounded ${key}`,\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"text-muted mb-2\",\n                  children: sensor.description || sensor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"value h5 mb-2\",\n                  children: currentData ? `${currentData.value || currentData.raw || ''} ${currentData.unit || ''}` : `-- ${sensor.unit}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timestamp small text-muted\",\n                  children: currentData ? currentData.timestamp ? new Date(currentData.timestamp).toLocaleString() : 'N/A' : 'Waiting for data...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, sensor.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Sensor History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sensor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Timestamp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: sensorHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.sensor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: entry.unit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatTimestamp(entry.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorsTab, \"HLThMnpxMnCEnVtE5PbmGi/+E3I=\");\n_c = SensorsTab;\nexport default SensorsTab;\nvar _c;\n$RefreshReg$(_c, \"SensorsTab\");","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Button","Table","jsxDEV","_jsxDEV","SensorsTab","config","sensorData","backendConnected","_s","_config$sensors","sensorHistory","setSensorHistory","Object","entries","forEach","key","data","timestamp","prevHist","length","sensor","historyEntry","value","raw","unit","Date","toISOString","slice","refreshSensors","console","log","clearSensorLog","formatTimestamp","toLocaleString","children","Header","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","Body","sensors","map","topic","split","currentData","md","lg","description","name","responsive","entry","index","_c","$RefreshReg$"],"sources":["/home/linux-1/projects/web-server-app/imx8mp-web-client/src/components/SensorsTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Table } from 'react-bootstrap';\nimport { TabConfig, SensorData, SensorHistoryEntry } from '../types';\n\ninterface SensorsTabProps {\n  config: TabConfig & { sensors?: any[] };\n  sensorData: { [key: string]: SensorData | { raw?: string; [key: string]: any } };\n  backendConnected: boolean;\n}\n\nconst SensorsTab: React.FC<SensorsTabProps> = ({ config, sensorData, backendConnected }) => {\n  const [sensorHistory, setSensorHistory] = useState<SensorHistoryEntry[]>([]);\n\n  useEffect(() => {\n    // Update history when sensorData changes\n    Object.entries(sensorData).forEach(([key, data]) => {\n      if (data && data.timestamp) {\n        setSensorHistory(prevHist => {\n          // Avoid duplicate entries for the same timestamp/key\n          if (prevHist.length > 0 && prevHist[0].sensor === key && prevHist[0].timestamp === data.timestamp) return prevHist;\n          const historyEntry: SensorHistoryEntry = {\n            sensor: key,\n            value: data.value || (data as any).raw || '',\n            unit: data.unit || '',\n            timestamp: data.timestamp || new Date().toISOString(),\n          };\n          return [historyEntry, ...prevHist.slice(0, 49)];\n        });\n      }\n    });\n  }, [sensorData]);\n\n  const refreshSensors = () => {\n    // Optionally, trigger a backend refresh if needed\n    console.log('Manual sensor refresh requested');\n  };\n\n  const clearSensorLog = () => {\n    setSensorHistory([]);\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  return (\n    <div>\n      <Card>\n        <Card.Header className=\"d-flex justify-content-between align-items-center\">\n          <h5>\n            <i className=\"fas fa-thermometer-half me-2\"></i>\n            Sensor Data\n          </h5>\n          <div>\n            <Button variant=\"primary\" size=\"sm\" onClick={refreshSensors} className=\"me-2\">\n              <i className=\"fas fa-sync-alt me-1\"></i>\n              Refresh\n            </Button>\n            <Button variant=\"warning\" size=\"sm\" onClick={clearSensorLog}>\n              <i className=\"fas fa-trash me-1\"></i>\n              Clear Log\n            </Button>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Row className=\"mb-4\">\n            {(config.sensors ?? []).map((sensor: any) => {\n              const key = sensor.topic.split('/')[1];\n              const currentData = sensorData[key];\n              return (\n                <Col key={sensor.name} md={6} lg={4} className=\"mb-3\">\n                  <div className={`sensor-card p-3 border rounded ${key}`}> \n                    <h6 className=\"text-muted mb-2\">{sensor.description || sensor.name}</h6>\n                    <div className=\"value h5 mb-2\">\n                      {currentData ? `${currentData.value || (currentData as any).raw || ''} ${currentData.unit || ''}` : `-- ${sensor.unit}`}\n                    </div>\n                    <div className=\"timestamp small text-muted\">\n                      {currentData ? (currentData.timestamp ? new Date(currentData.timestamp).toLocaleString() : 'N/A') : 'Waiting for data...'}\n                    </div>\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n\n          <div className=\"mt-4\">\n            <h6>Sensor History</h6>\n            <Table responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Sensor</th>\n                  <th>Value</th>\n                  <th>Unit</th>\n                  <th>Timestamp</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sensorHistory.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{entry.sensor}</td>\n                    <td>{entry.value}</td>\n                    <td>{entry.unit}</td>\n                    <td>{formatTimestamp(entry.timestamp)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default SensorsTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}